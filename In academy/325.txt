3/25 수요일

---------------------------------
특정목적을 위해 데이터를 효율적으로 관리하려면 테이블이 여러개 필요함 ex)도서대여장부

크기비교-asc3코드

||결합연산자

JDBC(java database connectivity)
 java + sql연동

---------------------------------
 SQL key 종류

*primary key(기본키,pk)
-중복 x, null값 x

값을 가져온다 = 참조한다(reference)

*foreign key(외래키,fk)
-중복 o, null값 o
(단, 참조될 테이블에서 기본키로 설정되어있어야 함)
---------------------------------

Q)
부서번호가 90 or 50인 부서의 사원명출력

select first_name ||' '|| last_name as 사원명
from employees
where department_id = 90 or department_id = 50;


Q) [IN문법]
부서번호가 90 or 50 or 30 ....인 부서의 사원명출력(or가 여러개일때)

select first_name ||' '|| last_name as 사원명
from employees
where department_id in(90,50,30);

--------------------------------
검색
윈도우 *(all)   ?(한글자)
p*.txt >> p로시작하는 텍스트문서
p?.hwp >> p로시작하는 뒤 한글자 hwp 문서

sql %(all)    _(한글자)
p%.txt
p_.hwp

%p%.txt >>p가 들어가있는 모든 
%d.txt>> d로끝나는


Q) [like 문]
사원중에 이름이 A로 시작하는 사람 조회

select first_name as 이름
from employees
where first_name like 'A%';

*정확한 값이아닌 근사값일때는 =대신 like를 쓴다.

Q)
입사일중 입사날짜가 17일인 직원 이름, 입사일 출력

select first_name as 이름, hire_date as 입사일
from employees
where hire_date like '%17';

Q)
2003년에 입사한 직원을 모두 출력하시오

select *
from employees
where hire_date like '03%';

년2자리/월2자리/일2자리
19-NOV-20
일-월-년

/////////////////////
oracle 구분
RR/mm/dd --> 17/01/09
RR:0~49 --> 2000년대
   50~99 --> 1900년대
////////////////////

Q)입사일중 입사월이 8월인 직원출력

select first_name as 사원명
from employees
where hire_date like '%/08/%';

참고) %08%는 앞뒤로 다 적용됨

-----------------------
오늘날짜
select sysdate
from dual;

dual 가상테이블(쓸거 없을때 사용)

------------------------
커미션알아보기[null값은 is,not사용]
커미션이 없는(null인)사람

select first_name as 이름, commission_pct as 커미션
from employees
where commission_pct is null;

커미션이 받는(null이 아닌)사람

select first_name as 이름, commission_pct as 커미션
from employees
where commission_pct is not null;

커미션이 없는 직원의 이름과 커미션을 출력하되 만약 커미션이 NULL일 경우 커미션 자리에 0으로 출력

select first_name as 이름, nvl(commission_pct,0) as 커미션
from employees
where commission_pct is null;

NVL함수는 매우 편리하지만 오라클에서만 제공하는 함수이다.
nvl(칼럼,null일 경우 반환값)
nvl2(칼럼,null이 아닐 경우 반환값,null일 경우 반환값)
**변환시 항상 칼럼과 반환값은 타입이 같아야함 ex.(숫자,숫자)

*문자타입으로 변환[to_char()]
select first_name as 이름, nvl(to_char(commission_pct),'없음') as 커미션
from employees;
----------------------------------
sort 정렬
 조건)
  1)key
  2)차순 : 오름차순, 내림차순(ascending,decending)
 C : bubble sort, quick sort, selection sort...

logic 외우지말고 이해하자.
java sort logic은 cpu속도를 단축할 수 있다.

Q)
직원의 이름, 급여를 출력하되 급여 오름차순으로 출력

select  first_name as 이름, salary as 급여
from employees
order by salary asc;

*asc는 생략이 가능하다

Q)
직원의 사원번호 이름을 출력하되 사원번호 내림차순으로 출력

select employee_id as 사원번호, first_name as 이름
from employees
order by employee_id desc;

Q)
직원의 이름, 급여를 출력하되 급여 내림차순으로 출력
단, 사원아이디가 110 이하인 직원만.

select first_name as 이름, salary as 급여
from employees
where employee_id <= 110
order by salary desc;

Q)
직원의 이름, 급여, 사원아이디를 출력하되 급여 내림차순으로 출력
단, 같은 급여일 경우 사원아이디 오름차순으로
단, 사원아이디가 110 이하인 직원만.

select first_name as 이름, salary as 급여, employee_id as 사원아이디
from employees
where employee_id <= 110
order by salary desc,employee_id asc;

종합
Q)
2004년도에 입사해서 30,50,80번 부서에 속해이으면서,
급여를 5000이상 17000이하를 받는 직원을 조회하시오
단, 커미션을 받지 않는직원들은 검색 대상에서 제외시키며,
먼저 입사한 직원이 먼저 출력되어야 하며
입사일이 같은 경우 급여가 많은 직원이
먼저 출력되도록 하시오
(출력은 이름, 입사일, 부서번호, 급여, 커미션퍼섽트)

select first_name as 이름, hire_date as 입사일,department_id as 부서번호, salary as 급여, commission_pct as 커미션퍼센트
from employees
where hire_date like '04%' 
 and  department_id in(30,50,80) 
 and salary between 5000 and 17000 
 and commission_pct is not null
order by hire_date asc, salary desc;

=======================================

[order by 4가지 사용법]***order class에서만 사용가능

order by (1) 칼럼명 (2) alias (3) 순번 (4) 계산식

Q)
직원의 급여 내림차순, 급여가 같으면 사원아이디 오름차순으로 출력

1) 칼럼명
select first_name as 이름, employee_id as 사번아이디,salary as 급여
from employees
order by salary desc,employee_id asc;


2)alias
select first_name as 이름, employee_id as 사번아이디,salary as 급여
from employees
order by 급여 desc,사번아이디 asc;

3)순번
select first_name as 이름, employee_id as 사번아이디,salary as 급여
from employees
order by 3 desc,2 asc;

4)계산식
select first_name as 이름, employee_id as 사번아이디,salary*12 as 연봉
from employees
order by salary*12 desc,2 asc;

--------------------------

연봉이 120000이상인 경우의 직원이름, 연봉출력
단, 연봉은 내림차순소트, alias소트할것

select first_name as 이름, salary*12 as 연봉
from employees
where salary*12 >= 120000
order by 연봉 desc;

--------------------------
단일행 함수 single row function : 결과가 하나만 return

Q)
last_name(성)이 king 인 사원이름, 성 , 급여출력

select first_name as 이름, last_name as 성 ,salary as 급여
from employees
where lower(last_name) = 'king';

*lower() : 소문자변환
<->upper() : 대문자변환
initcap() : 첫글자만 대문자변환

select initcap('i will live my life for SQL')
from dual;
===============================
**3/25배운것**
SQL 키종류
IN 문법
검색 타입( % _ )
like 문법
가상테이블-dual
nvl함수,null값
sort(정렬) - order by 함수 4가지 사용법
단일행 함수 -형변환함수
===============================
