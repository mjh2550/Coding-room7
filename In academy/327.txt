327금
-----------------------
[equi join] - Inner join, natural join
2테이블 참조해야할 때 사용
from 먼저쓰면 쉽다



Q)
직원의 이름, 급여와 부서명을 출력하시오

select first_name 사원명,salary 급여,department_name 부서명
from employees, departments;

>>m by n으로 출력하므로 데이터가 매우많이나옴(오답)-cartesian product : 기준없이 많은데이터 출력

**테이블명.칼럼명

select first_name 사원명,salary 급여,department_name 부서명
from employees, departments;
where employees.department_id = departments.department_id;

>>employees 테이블에서 외래키인 부서번호와 departments 테이블에서 기본키인 부서번호가 같다는 조건을 추가 : equi join

**테이블명도 별명을 줄 수 있다.

Q)
직원의 이름, 매니저아이디, 지역아디를 출력하시오(단, 이름순으로 정렬)

select e.first_name 사원명,e.manager_id 매니저아이디,d.location_id 지역아이디
from employees e,departments d
where e.manager_id = d.manager_id
order by 1;


Q)


직원의 이름, 매니저아이디, 지역아디를 출력하시오(단, 매니저아이디가 120이상인 경우)


Q)
직원들의 이름과 직급명(job_title)을 조회하시오


Q)

직원의 이름, 부서명, 해당city를 출력
city 오름차순으로

Q)
도시별직원수 출력

select l.city 도시,count(*) 직원수
from employees e,departments d,locations l
where e.department_id =d.department_id and d.location_id = l.location_id
group by l.city
order by 1;

Q1)
직원의 이름과 근무국가명을 조회하시오

Q2)
각 도시에 속한 부서 이름 별로 2005년 이전에 입사한 직원들의 인원수를 조회하시오. 도시의 순으로 출력하고 동일한 도시에 대해서는 인원수가 적은 순으로 출력합니다.(출력은 도시명, 부서명,인원수)

Q3)
업무명이 sales로 시작하는 직원 중에서 급여가 10000이상 20000 이하인 직원들의 이름, 성 과 연봉 및 직책을 출력하시오(급여가 많은순으로 출력하시오)

---

1
select e.first_name 직원명,c.country_name 근무국가명
from employees e,departments d,locations l,countries c
where e.department_id = d.department_id and l.location_id = d.location_id
and l.country_id = c.country_id;

2
select d.department_name 부서명,l.city 도시명,count(*) 인원수
from employees e,departments d,locations l
where e.department_id =d.department_id and d.location_id = d.location_id
and hire_date < '05/01/01'
group by d.department_name,l.city
order by 2,3 desc;

**검색할때 쓰는 '%','_'는 like랑 같이 써야된다는 것 명심하기

3
select e.first_name 이름, e.last_name 성, e.salary 연봉, j.job_title 직책
from employees e,job_History jh,jobs j
where e.department_id =jh.department_id and jh.job_id = j.job_id
and e.salary between 10000 and 20000
and substr(j.job_title,1,5)='Sales'
order by 3;
------------------------------
[outer join]
*null값 칼럼에 (+)해주면 null값도 조인이 가능함
*TIP : null값 있는 테이블에(+), 반대쪽에서 null쪽으로 조인
--------------------
[LEFT(RIGHT) JOIN]
select e.first_name 이름,e.salary 급여,d.department_name 부서명
from employees e,departments d
where e.department_id = d.department_id(+)
order by 1; >> 부서없는사원 출연

select e.first_name 이름,e.salary 급여,d.department_name 부서명
from employees e,departments d
where e.department_id(+) = d.department_id
order by 1; >> 사원없는부서 출연

select e.first_name 이름,e.salary 급여,d.department_name 부서명
from employees e LEFT OUTER JOIN
departments d on(e.department_id = d.department_id)
order by 1; 

>>콤마 대신 LEFT(RIGHT) OUTER JOIN + ON()조인 절 + where~절 (우측칼럼 +랑 동일) 사용
***where 사용에 주의하자!!
---------------------

ansi 1999(ANSI/ISO SQL:1999)
-------------------------------
[FULL join]

select e.first_name 이름,e.salary 급여,d.department_name 부서명
from employees e FULL OUTER JOIN
departments d on(e.department_id = d.department_id)
order by 1; 

-------------------------------

Q)
2007년에 입사한(hire_date)
직원들의 사번(employee_id), 이름,성, 입사일, 부서명을 조회하되 부서에 배치되지 않은 직원의 경우, '그런부서 없어'로보여주고 정렬은 성을 기준으로 출력하시오


-----------------------------
[self join](기본은 equi join)
*자기가 자기를 복제하여 사용함
Q)

직원의 사번 사원이름 매니저아이디를 출력하시오
>>사원번호 이자 매니저번호

from employees e/*사원테이블*/, employees m/*매니저테이블 복제*/
----------------------------

Q)******다시풀기
매니저 이름과 매니저가 관리하는 직원의 수를 조회하시오 단, 관리직원수가 3명이상인 관리자만 출력되도록 하시오








select m.first_name 매니저이름, count(*) 관리직원수
from employees e,employees m
where e.manager_id = m.employee_id
group by m.first_name
having count(*)>=3;

===============================
H.w**
DROP TABLE SALGRADE;

CREATE TABLE SALGRADE 
( 
  GRADE number(5) NOT NULL,
  LOSAL number(7),
  HISAL number(7),
    CONSTRAINT SALGRADE_PK PRIMARY KEY (GRADE)
);




INSERT INTO SALGRADE(GRADE, LOSAL, HISAL) VALUES (1, 500, 2999);
INSERT INTO SALGRADE(GRADE, LOSAL, HISAL) VALUES (2, 3000, 3799);
INSERT INTO SALGRADE(GRADE, LOSAL, HISAL) VALUES (3, 3800, 5199);
INSERT INTO SALGRADE(GRADE, LOSAL, HISAL) VALUES (4, 5200, 9999);
INSERT INTO SALGRADE(GRADE, LOSAL, HISAL) VALUES (5, 10000, 50000);

SELECT * FROM SALGRADE; 
================================
===============================
**3/27배운것**
equi join
outer join(left,right,full)
-오라클방식, ANSI방식
self join

===============================